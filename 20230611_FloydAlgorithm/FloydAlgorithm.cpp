#include <bits/stdc++.h>

using namespace std;

int main() {

    //플로이드 알고리즘
    //최단경로를 구하는 알고리즘: 다익스트라, 플로이드
    //모든 정점 쌍에 대해 최단 거리를 구하는 알고리즘
    //무방향 그래프, 유향그래프 상관없이 적용 가능
    //간선의 가중치가 음이어도 적용 가능 (다익스트라는 음의 가중치가 있는 경우 적용할 수 없다.)
    //음의 사이클(폐곡선의 가중치의 합이 음이 되는 경우)이 있으면 적용할 수 없다. => 해당 사이클을 계쏙 돌면 비용이 계속 감소하기 때문

    //정점의 개수가 V일 경우
    //V개의 단계를 거친다.
    //각 단계마다 V^2개의 모든 D[s][t] 값을 D[s][k]+D[k][t] 값과 비교한다.
    //D: 최단 경로 테이블, s: 시작 노드, t: 도착 노드, k: 경유 노드
    //O(V^3)의 시간복잡도를 갖는다.


    return 0;
}
