0. Tree: 무방향 무사이클 연결그래프 (Undirected Acyclic Connected Graph)
  *하나의 트리에 대해 모든 노드가 루트가 될 수 있다.
  *트리에 V개의 노드가 있다면 간선은 V-1개가 있다.
1. Depth: 특정 노드에 대해 root node (트리의 최상위 노드)와의 거리 (root 노드에서 출발해서
  특정 노드에 도달하기까지 거쳐야 하는 간서의 개수)
2. 트리에서의 BFS: 트리에서 BFS를 할 때, 특정 노드에서 연결된 노드를 큐에 넣되 부모 노드는 큐에 넣지 않는다. (root 노드에서 시작한 BFS는 특정 노드를 방문할 때 해당 노드의 조상 노드는 이미 방문을 한 상태이다.)
  *각 노드의 부모 노드를 조사할 수 있고, 각 노드의 depth를 조사할 수 있다.
3. 트리에서의 DFS: 트리에서 DFS를 할 때, 특정 노드에서 연결된 노드를 스택에 넣되 부모 노드는 스택에 넣지 않는다. (root 노드에서 시작한 DFS는 특정 노드를 방문할 때 해당 노드의 조상 노드는 이미 방문을 한 상태이다.)
4. 이진 트리의 표현 (배열 사용)
각 노드의 왼쪽 자식, 오른쪽 자식 및 부모 노드를 순서대로 나열한다.
[binaryTree예시.png 참조]
int[] lc = {-1, 2, 4, 6, 0, 0, 0, 0, 0};
int[] rc = {-1, 3, 5, 7, 0, 8, 0, 0, 0};
int[] parent = {-1, 0, 1, 1, 2, 2, 3, 3, 5};
5. 이진 트리의 순회: 레벨순회(Level Order Traversal), 전위순회(Preorder Traversal), 중위순회(Inorder Traversal), 후위순회(Postorder Traversal)
  5a. 레벨순회 (Level Order Traversal)
    특정 노드를 방문할 때,
      특정 노드를 방문하고,
      (해당 노드의 왼쪽 자식이 있으면) 해당 노드의 왼쪽 자식을 방문한 뒤
      (해당 노드의 오른쪽 자식이 있으면) 해당 노드의 오른쪽 자식을 방문한다.
      (해당 노드의 왼쪽 자식의 자식노드는 해당 노드의 오른쪽 자식을 방문한 뒤에 방문한다.)
    binaryTree예시.png의 경우 1 -> 2 -> 3 -> 4 -> 5 -> 6 -> 7 -> 8
    이진 트리에 BFS를 적용한 것과 같게 된다.
  5b. 전위순회 (Preorder Traversal)
    특정 노드를 방문할 때,
      특정 노드를 방문하고,
      (해당 노드의 왼쪽 자식이 있으면) 해당 노드의 왼쪽 서브 트리에 대해 전위순회를 끝내고,
      (해당 노드의 오른쪽 자식이 있으면) 해당 노드의 오른쪽 서브 트리에 대해 전위순회를 수행한다.
    binaryTree예시.png의 경우 1 -> 2 -> 4 -> 5 -> 8 -> 3 -> 6 -> 7
    이진 트리에 DFS를 적용한 것과 같게 된다.
    전위, 중위, 후위 순회는 부분 과정이 전체와 닮은 모습이다. => 재귀를 사용하여 쉽게 구현할 수 있다.
    전위순회는 해당 노드를 방문하고 왼쪽 자식 노드에 대해 순회한 뒤 오른쪽 자식 노드에 대해 순회하는 순서를 갖는다.
  5c. 중위순회(Inorder Traversal)
    특정 노드를 방문할 때
      (해당 노드의 왼쪽 자식이 있으면) 해당 노드의 왼쪽 서브 트리에 대해 중위순회를 끝내고,
      해당 노드를 방문하고,
      (해당 노드의 오른쪽 자식이 있으면) 해당 노드의 오른쪽 서브 트리에 대해 중위순회를 수행한다.
    binaryTree예시.png의 경우 4 -> 2 -> 5 -> 8 -> 1 -> 6 -> 3 -> 7
    이진 탐색 트리에서 오름차순으로 노드를 방문한 것과 같게 된다. (왼쪽 노드부터 오른쪽으로 나열한 것과 같게 된다.)
  5d. 후위순회(Postorder Traversal)
    특정 노드를 방문할 때
      (해당 노드의 왼쪽 자식이 있으면) 해당 노드의 왼쪽 서브 트리에 대해 후위순회를 끝내고,
      (해당 노드의 오른쪽 자식이 있으면) 해당 노드의 오른쪽 서브 트리에 대해 후위순회를 끝내고,
      해당 노드를 방문한다.
    binaryTree예시.png의 경우 4 -> 8 -> 5 -> 2 -> 6 -> 7 -> 3 -> 1
    전위순회는 특정 노드가 방문된 뒤에야 해당 노드의 후손 노드들이 방문되지만,
    후위순회는 특정 노드의 후손들이 전부 방문된 뒤에야 해당 노드가 방문된다.
  5e. 이진 트리의 결정: 중위순회의 순서와 다른순회의 순서가 주어지면 이진 트리는 결정된다. (두 순회 결과 중 하나는 중위순회이어야 이진 트리가 결정된다.)

